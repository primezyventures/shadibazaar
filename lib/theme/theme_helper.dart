import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(23.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(20.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      radioTheme: RadioThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return appTheme.deepOrange500;
          }
          return colorScheme.onSurface;
        }),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 39,
        space: 39,
        color: appTheme.gray400,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 18.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray900.withOpacity(0.46),
          fontSize: 14.fSize,
          fontFamily: 'Sora',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray70002,
          fontSize: 11.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 30.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 28.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray90003,
          fontSize: 24.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: 13.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w700,
        ),
        labelMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 11.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w700,
        ),
        labelSmall: TextStyle(
          color: colorScheme.primary,
          fontSize: 9.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray800,
          fontSize: 20.fSize,
          fontFamily: 'Sora',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 16.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray40004,
          fontSize: 14.fSize,
          fontFamily: 'Karla',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFF89300),
    primaryContainer: Color(0XFF2A2A2A),
    secondaryContainer: Color(0XFF979797),

    // Error colors
    errorContainer: Color(0XFF616161),
    onErrorContainer: Color(0XFF141414),

    // On colors(text colors)
    onPrimary: Color(0XFF181818),
    onPrimaryContainer: Color(0XFFE7E7E7),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber300 => Color(0XFFFFD363);
  Color get amber700 => Color(0XFFF8A300);

  // Black
  Color get black900 => Color(0XFF000000);

  // BlueGray
  Color get blueGray100 => Color(0XFFD3D3D3);
  Color get blueGray10001 => Color(0XFFD2D2D2);
  Color get blueGray10002 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF8B8B8B);
  Color get blueGray900 => Color(0XFF303030);
  Color get blueGray90001 => Color(0XFF353535);
  Color get blueGray90002 => Color(0XFF343434);
  Color get blueGray90003 => Color(0XFF333333);

  // DeepOrange
  Color get deepOrange500 => Color(0XFFFF621F);
  Color get deepOrange50001 => Color(0XFFFF611E);

  // Gray
  Color get gray300 => Color(0XFFE2E2E2);
  Color get gray30001 => Color(0XFFE3E1E1);
  Color get gray400 => Color(0XFFB7B7B7);
  Color get gray40001 => Color(0XFFB4B4B4);
  Color get gray40002 => Color(0XFFC6C6C6);
  Color get gray40003 => Color(0XFFBDBDBD);
  Color get gray40004 => Color(0XFFC2C2C2);
  Color get gray500 => Color(0XFFA2A0A8);
  Color get gray50001 => Color(0XFF8F8F8F);
  Color get gray50002 => Color(0XFF9E9E9E);
  Color get gray50003 => Color(0XFFA7A7A7);
  Color get gray600 => Color(0XFF797979);
  Color get gray60001 => Color(0XFF727272);
  Color get gray60002 => Color(0XFF7E7E7E);
  Color get gray700 => Color(0XFF5A5A5A);
  Color get gray70001 => Color(0XFF676767);
  Color get gray70002 => Color(0XFF5E5E5E);
  Color get gray70003 => Color(0XFF686868);
  Color get gray800 => Color(0XFF444150);
  Color get gray80001 => Color(0XFF4F4F4F);
  Color get gray80002 => Color(0XFF3C3C3C);
  Color get gray80003 => Color(0XFF464646);
  Color get gray80004 => Color(0XFF3D3D3D);
  Color get gray80005 => Color(0XFF4C4C4C);
  Color get gray900 => Color(0XFF252525);
  Color get gray90001 => Color(0XFF161616);

  // Graye
  Color get gray9009e => Color(0X9E1F1F1F);
  Color get gray9009e01 => Color(0X9E292929);

  // Green
  Color get green500 => Color(0XFF47EB4E);
  Color get green50001 => Color(0XFF47EB4D);
  Color get green700 => Color(0XFF29A71A);
  Color get green800 => Color(0XFF009A08);

  // Orange
  Color get orange50 => Color(0XFFFEF5E5);
  Color get orange500 => Color(0XFFF89A00);
  Color get orange50001 => Color(0XFFF89800);
  Color get orangeA200 => Color(0XFFFF9F43);

  // Red
  Color get redA700 => Color(0XFFFF0000);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow700 => Color(0XFFFFBB39);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
